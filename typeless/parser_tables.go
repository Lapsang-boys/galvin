// generated by Textmapper; DO NOT EDIT

package typeless

import (
	"fmt"
)

// Symbol represents a set of all terminal and non-terminal symbols of the typeless language.
type Symbol int

var symbolStr = [...]string{
	"Expression_optlist",
	"File",
	"Expression",
	"FunctionAbstraction",
	"Identifier_list_Comma_separated",
	"Identifier_list_Comma_separated_opt",
	"Body",
	"Expression_list_Comma_separated",
	"Expression_list_Comma_separated_opt",
	"FunctionApplication",
	"Literal",
	"Identifier",
}

func (n Symbol) String() string {
	if n < Symbol(NumTokens) {
		return Token(n).String()
	}
	i := int(n) - int(NumTokens)
	if i < len(symbolStr) {
		return symbolStr[i]
	}
	return fmt.Sprintf("nonterminal(%d)", n)
}

var tmAction = []int32{
	-3, -13, 19, -1, 18, -23, 3, 4, 5, 6, -35, -41, -51, -1, 9, -57,
	-65, -1, -1, -1, -1, 17, 8, -71, -1, -77, 7, -1, -2,
}

var tmLalr = []int32{
	0, 1, 2, 1, 3, 1, 10, 1, -1, -2, 2, -1, 3, -1, 10, -1,
	0, 2, -1, -2, 5, -1, 0, 0, 2, 0, 3, 0, 10, 0, -1, -2,
	2, -1, 9, 11, -1, -2, 2, -1, 3, -1, 10, -1, 6, 16, -1, -2,
	7, -1, 9, 10, -1, -2, 5, -1, 6, 14, 7, 14, -1, -2, 7, -1,
	6, 15, -1, -2, 5, -1, 4, 12, -1, -2, 5, -1, 6, 13, 7, 13,
	-1, -2,
}

var tmGoto = []int32{
	0, 2, 2, 14, 22, 24, 32, 34, 38, 40, 42, 50, 52, 54, 62, 70,
	72, 74, 76, 78, 80, 88, 96, 108,
}

var tmFromTo = []int8{
	27, 28, 1, 2, 10, 2, 11, 2, 18, 2, 19, 2, 20, 2, 1, 3,
	11, 3, 19, 3, 20, 3, 24, 26, 5, 11, 15, 11, 23, 11, 25, 11,
	17, 21, 12, 18, 16, 20, 3, 10, 13, 19, 1, 4, 11, 4, 19, 4,
	20, 4, 0, 1, 0, 27, 1, 5, 11, 15, 19, 23, 20, 25, 1, 6,
	11, 6, 19, 6, 20, 6, 10, 12, 10, 13, 19, 24, 11, 16, 11, 17,
	1, 7, 11, 7, 19, 7, 20, 7, 1, 8, 11, 8, 19, 8, 20, 8,
	1, 9, 10, 14, 11, 9, 18, 22, 19, 9, 20, 9,
}

var tmRuleLen = []int8{
	2, 0, 1, 1, 1, 1, 1, 6, 3, 1, 1, 0, 1, 3, 1, 1,
	0, 4, 1, 1,
}

var tmRuleSymbol = []int32{
	11, 11, 12, 13, 13, 13, 13, 14, 15, 15, 16, 16, 17, 18, 18, 19,
	19, 20, 21, 22,
}
